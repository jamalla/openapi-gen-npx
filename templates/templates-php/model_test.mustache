<?php
{{#models}}
{{#model}}
/**
 * {{classname}}Test
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Salla Team
 * @link     https://salla.com
 */

{{>partial_header}}

namespace {{invokerPackage}}\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * {{classname}}Test Class Doc Comment
 *
 * @category    Class
 * @description {{description}}{{^description}}{{classname}}{{/description}}
 * @package     {{invokerPackage}}
 * @author   Salla Team
 * @link     https://salla.com
 */
class {{classname}}Test extends TestCase
{

    protected ${{camelCase classname}};

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $this->{{camelCase classname}} = new {{classname}}();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
        $this->{{camelCase classname}} = null;
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test instantiation of {{classname}}
     */
    public function testInstantiation()
    {
        $this->assertInstanceOf({{classname}}::class, $this->{{camelCase classname}});
    }

{{#vars}}
    /**
     * Test attribute "{{name}}"
     */
    public function testGet{{nameInCamelCase}}()
    {
        // Set a value to test retrieval
        $value = "Test Value"; // Replace with appropriate test value

        $this->{{camelCase classname}}->set{{nameInCamelCase}}($value);
        $this->assertEquals($value, $this->{{camelCase classname}}->get{{nameInCamelCase}}());
    }
{{/vars}}
}
{{/model}}
{{/models}}